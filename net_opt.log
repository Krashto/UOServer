Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheckMate()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheckMate()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Server.Scripts.Commands.VEmote.PlaySound(Mobile m, Int32 index)
   à Server.Scripts.Commands.VEmote.VEmote_OnCommand(CommandEventArgs e)
   à Server.Commands.CommandSystem.Handle(Mobile from, String text, MessageType type)
   à Server.Mobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Mobiles.PlayerMobile.DoSpeech(String text, Int32[] keywords, MessageType type, Int32 hue)
   à Server.Network.PacketHandlers.UnicodeSpeech(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayStaleMate()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayStaleMate()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.Pawn.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.Die(Boolean sound)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheck()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.BaseChessPiece.MoveTo(Move move)
   à Arya.Chess.BChessboard.TryMove(String& err, BaseChessPiece piece, Point2D to)
   à Arya.Chess.ChessGame.OnPieceMove(Mobile from, Object targeted)
   à System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   à System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)
   à System.Delegate.DynamicInvokeImpl(Object[] args)
   à Arya.Chess.ChessTarget.OnTarget(Mobile from, Object targeted)
   à Server.Targeting.Target.Invoke(Mobile from, Object targeted)
   à Server.Network.PacketHandlers.TargetResponse(NetState state, PacketReader pvSrc)
   à Server.Network.MessagePump.HandleReceive(NetState ns)
   à Server.Network.MessagePump.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

Redundant compile for packet Server.Network.PlaySound, use Acquire() and Release()
   à Server.Network.Packet.Compile(Boolean compress, Int32& length)
   à Server.Network.NetState.Send(Packet p)
   à Arya.Chess.BChessboard.PlaySound(ChessMobile m, Int32 sound)
   à Arya.Chess.King.PlayCheckMate()
   à Arya.Chess.BChessboard.PushGame(ChessColor nextMoveColor, Move move)
   à Arya.Chess.BChessboard.OnMoveOver(Move move)
   à Arya.Chess.BaseChessPiece.OnMoveOver()
   à Arya.Chess.Rook.OnMoveOver()
   à Arya.Chess.ChessMobile.OnLocationChange(Point3D oldLocation)
   à Server.Mobile.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobiles.BaseCreature.SetLocation(Point3D newLocation, Boolean isTeleport)
   à Server.Mobile.Move(Direction d)
   à Server.Mobiles.BaseAI.DoMoveImpl(Direction d)
   à Server.Mobiles.BaseAI.DoMove(Direction d, Boolean badStateOk)
   à Server.Mobiles.BaseAI.DoMove(Direction d)
   à Server.Mobiles.BaseAI.DoActionWander()
   à Server.Mobiles.MeleeAI.DoActionWander()
   à Server.Mobiles.BaseAI.Think()
   à Server.Mobiles.BaseAI.AITimer.OnTick()
   à Server.Timer.Slice()
   à Server.Core.Run()
   à ServUO.ServUO.Main(String[] args)

